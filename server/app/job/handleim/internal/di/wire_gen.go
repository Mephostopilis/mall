// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//+build !wireinject

package di

import (
	"edu/job/im/internal/biz"
	"edu/job/im/internal/conf"
	"edu/job/im/internal/server"
	"github.com/go-kratos/etcd/registry"
	"github.com/go-kratos/kratos/v2"
	"github.com/go-kratos/kratos/v2/log"
)

// Injectors from wire.go:

// initApp init kratos application.
func InitApp(service *conf.Service, confServer *conf.Server, logger log.Logger, registryRegistry *registry.Registry) (*kratos.App, error) {
	job, err := biz.New(confServer, logger, registryRegistry)
	if err != nil {
		return nil, err
	}
	amqpConsumer, err := server.NewAmqpConsumer(confServer, logger, job)
	if err != nil {
		return nil, err
	}
	app := newApp(service, logger, amqpConsumer)
	return app, nil
}
